openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /core/api/v1/guides/:
    get:
      operationId: listGuides
      description: ''
      parameters:
      - name: guide_type
        required: false
        in: query
        description: guide_type
        schema:
          type: string
          enum:
          - guide
          - onboarding
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Guide'
          description: ''
      tags:
      - core
  /core/api/v1/guides/{slug}/:
    get:
      operationId: retrieveGuide
      description: ''
      parameters:
      - name: slug
        in: path
        required: true
        description: Used by the clients to lookup specific guides.
        schema:
          type: string
      - name: guide_type
        required: false
        in: query
        description: guide_type
        schema:
          type: string
          enum:
          - guide
          - onboarding
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guide'
          description: ''
      tags:
      - core
  /core/api/v1/guides-modules/:
    get:
      operationId: listGuideModules
      description: ''
      parameters:
      - name: guide
        required: false
        in: query
        description: guide
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuideModule'
          description: ''
      tags:
      - core
  /core/api/v1/guides-modules/{slug}/:
    get:
      operationId: retrieveGuideModule
      description: ''
      parameters:
      - name: slug
        in: path
        required: true
        description: Used by the clients to lookup specific guide modules.
        schema:
          type: string
      - name: guide
        required: false
        in: query
        description: guide
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuideModule'
          description: ''
      tags:
      - core
  /core/api/v1/addresses/:
    get:
      operationId: listAddress
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - core
    post:
      operationId: createAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - core
  /core/api/v1/addresses/{id}/:
    get:
      operationId: retrieveAddress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - core
    put:
      operationId: updateAddress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - core
    patch:
      operationId: partialUpdateAddress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - core
    delete:
      operationId: destroyAddress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this address.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - core
  /core/api/v1/offers/:
    get:
      operationId: listOffers
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: category
        required: false
        in: query
        description: category
        schema:
          type: string
          enum:
          - money-transfer
          - student-loans
          - credit-building-cards
          - credit-cards
          - credit-builder
          - banking
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Offer'
          description: ''
      tags:
      - core
  /core/api/v1/offers/{id}/:
    get:
      operationId: retrieveOffer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer.
        schema:
          type: string
      - name: category
        required: false
        in: query
        description: category
        schema:
          type: string
          enum:
          - money-transfer
          - student-loans
          - credit-building-cards
          - credit-cards
          - credit-builder
          - banking
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: ''
      tags:
      - core
  /core/api/v1/financial-profile/:
    get:
      operationId: listFinancialProfiles
      description: 'Post request will create a profile if it is missing and update
        it if the profile already exists.

        Then the response code will be 200.'
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FinancialProfile'
          description: ''
      tags:
      - core
    post:
      operationId: createFinancialProfile
      description: 'Post request will create a profile if it is missing and update
        it if the profile already exists.

        Then the response code will be 200.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FinancialProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FinancialProfile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialProfile'
          description: ''
      tags:
      - core
  /core/api/v1/logout/:
    get:
      operationId: listLogouts
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Logout'
          description: ''
      tags:
      - core
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
      tags:
      - core
  /core/api/v1/user/:
    get:
      operationId: retrieveCustomUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
      tags:
      - core
    put:
      operationId: updateCustomUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
      tags:
      - core
    patch:
      operationId: partialUpdateCustomUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
      tags:
      - core
  /core/jwt-auth/:
    get:
      operationId: listJwtAuths
      description: Redirect with jwt_token in get params
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - core
  /core/api/v1/phones/{opk}/:
    get:
      operationId: retrieveuser_phones_numbers
      description: User's phone numbers.
      parameters:
      - name: opk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - core
  /core/api/v1/phones/:
    get:
      operationId: listPhones
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - core
    post:
      operationId: createPhone
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - core
  /core/api/v1/phones/{id}/:
    get:
      operationId: retrievePhone
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - core
    put:
      operationId: updatePhone
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - core
    patch:
      operationId: partialUpdatePhone
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phone'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
          description: ''
      tags:
      - core
    delete:
      operationId: destroyPhone
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this phone.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - core
  /core/partners/{partner_name}/:
    get:
      operationId: retrievepartner
      description: Redirecting to the partner URL
      parameters:
      - name: partner_name
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - core
  /core/api/v1/guides-modules/mark-guide-as-read/:
    post:
      operationId: markGuideAsReadGuideModule
      description: Mark guide as read.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuideGuideModuleRead'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GuideGuideModuleRead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GuideGuideModuleRead'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuideGuideModuleRead'
          description: ''
      tags:
      - core
  /core/api/v1/guides-modules/save-multi-choice-form-results/:
    post:
      operationId: saveMultiChoiceFormResultsGuideModule
      description: Save the results of a multi selection form.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGuideMultiChoiceFormItems'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGuideMultiChoiceFormItems'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGuideMultiChoiceFormItems'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGuideMultiChoiceFormItems'
          description: ''
      tags:
      - core
  /core/api/v1/guides-modules/save-simple-form-results/:
    post:
      operationId: saveSimpleFormResultsGuideModule
      description: Save the results of a simple selection form.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGuideSimpleFormChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGuideSimpleFormChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGuideSimpleFormChoice'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGuideSimpleFormChoice'
          description: ''
      tags:
      - core
  /core/api/v1/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - core
  /core/api/v1/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - core
  /core/api/v1/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
      tags:
      - core
  /core/api/v1/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - core
  /core/api/v1/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - core
  /core/api/v1/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - core
  /core/api/v1/registration/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
      tags:
      - core
  /core/api/v1/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - core
  /core/api/v1/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - core
  /core/api/v1/social-login-facebook/:
    post:
      operationId: createFaceBookLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaceBookLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FaceBookLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FaceBookLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
      tags:
      - core
  /core/api/v1/social-login-google/:
    post:
      operationId: createGoogleLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
      tags:
      - core
  /core/api/v1/social-login-apple/:
    post:
      operationId: createAppleLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppleLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppleLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
      tags:
      - core
components:
  schemas:
    Guide:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Appears as the title for this guide
          maxLength: 100
        slug:
          type: string
          description: Used by the clients to lookup specific guides.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        reading_time:
          type: string
          description: Time to read the guide.
          maxLength: 10
        image:
          type: string
          format: binary
          nullable: true
        read:
          type: string
          readOnly: true
        sort_index:
          type: integer
          maximum: 4294967295
          format: int64
          minimum: 0
      required:
      - slug
      - reading_time
      - sort_index
    GuideModule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Appears as the title for this guide module
          maxLength: 100
        slug:
          type: string
          description: Used by the clients to lookup specific guide modules.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        sort_index:
          type: integer
          maximum: 4294967295
          format: int64
          minimum: 0
        steps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              sort_index:
                type: integer
                maximum: 4294967295
                format: int64
                minimum: 0
              content_type:
                enum:
                - static_page
                - simple_choice_form
                - multiple_choice_form
                - custom
                type: string
              content:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  title:
                    type: string
                    description: Form title for guide simple form
                    maxLength: 250
                  text:
                    type: string
                    nullable: true
                    description: Page text for guide static page
                  text_rendered:
                    type: string
                    readOnly: true
                  image:
                    type: string
                    format: binary
                    nullable: true
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        text:
                          type: string
                          description: Option for static page list with icons.
                          maxLength: 250
                        image:
                          type: string
                          format: binary
                          nullable: true
                        sort_index:
                          type: integer
                          maximum: 4294967295
                          format: int64
                          minimum: 0
                      required:
                      - text
                      - sort_index
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        text:
                          type: string
                          description: Choices for guide simple form
                          maxLength: 250
                        image:
                          type: string
                          format: binary
                          nullable: true
                      required:
                      - text
                  name:
                    type: string
                    description: The code name for the user content.
                    maxLength: 250
                    pattern: ^[-a-zA-Z0-9_]+$
                required: []
                type: object
                readOnly: true
              button_text:
                type: string
                nullable: true
                description: Button text for guide step
                maxLength: 100
            required:
            - sort_index
      required:
      - title
      - slug
      - sort_index
      - steps
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address_line1:
          type: string
          maxLength: 250
        address_line2:
          type: string
          maxLength: 250
        city:
          type: string
          maxLength: 100
        state:
          enum:
          - AL
          - AK
          - AZ
          - AR
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - ID
          - IL
          - IN
          - IA
          - KS
          - LA
          - ME
          - MD
          - MA
          - MI
          - MN
          - MS
          - MO
          - MT
          - NE
          - NV
          - NH
          - NJ
          - NM
          - NY
          - NC
          - ND
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VT
          - VA
          - WA
          - WI
          - WY
          type: string
        country:
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IL
          - IT
          - CI
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KP
          - KR
          - KS
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          type: string
        zip:
          type: string
          maxLength: 32
        lat:
          type: number
          nullable: true
        lng:
          type: number
          nullable: true
      required:
      - address_line1
      - address_line2
      - city
      - state
      - zip
    Offer:
      type: object
      properties:
        recommended:
          type: boolean
        ssn_required:
          type: boolean
        pros:
          type: object
        pros_short:
          type: object
        cons:
          type: object
        review_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        review_stars:
          type: number
        short_title:
          type: string
          maxLength: 100
        long_title:
          type: string
          maxLength: 250
        cta_text:
          type: string
          maxLength: 50
        cta_action:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
        cta_url:
          type: string
          readOnly: true
        category:
          enum:
          - money-transfer
          - student-loans
          - credit-building-cards
          - credit-cards
          - credit-builder
          - banking
          type: string
        recipient_gets:
          type: string
          nullable: true
          maxLength: 250
        total_cost:
          type: string
          nullable: true
          maxLength: 250
        is_verified:
          type: boolean
        logo:
          type: string
          format: binary
          nullable: true
        learn_more:
          type: string
          nullable: true
      required:
      - cons
      - short_title
      - long_title
      - cta_text
      - cta_action
      - category
    FinancialProfile:
      type: object
      properties:
        salary:
          type: number
          nullable: true
        occupation:
          type: string
          nullable: true
          maxLength: 250
        live_in_us:
          type: string
          nullable: true
          description: How long have you lived in the U.S.?
          maxLength: 250
        residence_status:
          type: string
          nullable: true
          description: What is your residence status in the U.S.?
          maxLength: 250
        ssn:
          type: string
          nullable: true
          maxLength: 250
        passport:
          type: string
          nullable: true
          maxLength: 250
        country:
          type: string
          nullable: true
          maxLength: 250
    CustomUserDetails:
      type: object
      properties:
        opk:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    Logout:
      type: object
      properties:
        body:
          type: object
      required:
      - body
    Phone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 15
      required:
      - phone
    GuideGuideModuleRead:
      type: object
      properties:
        guide_module:
          type: integer
          nullable: true
    UserGuideMultiChoiceFormItems:
      type: object
      properties:
        multi_choice_form_item_ids:
          type: array
          items: {}
      required:
      - multi_choice_form_item_ids
    UserGuideSimpleFormChoice:
      type: object
      properties:
        simple_form_item_id:
          type: integer
      required:
      - simple_form_item_id
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    JWT:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        user:
          type: object
          properties:
            pk:
              type: integer
              readOnly: true
            email:
              type: string
              format: email
              readOnly: true
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
      required:
      - access_token
      - refresh_token
      - user
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    CookieTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
          description: WIll override cookie.
        access:
          type: string
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - email
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    FaceBookLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    GoogleLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    AppleLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: basic authentication
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- basicAuth: []
- bearerAuth: []
