/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GuideModuleContent,
    GuideModuleContentFromJSON,
    GuideModuleContentFromJSONTyped,
    GuideModuleContentToJSON,
} from './';

/**
 * 
 * @export
 * @interface GuideModuleSteps
 */
export interface GuideModuleSteps {
    /**
     * 
     * @type {number}
     * @memberof GuideModuleSteps
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof GuideModuleSteps
     */
    sortIndex: number;
    /**
     * 
     * @type {string}
     * @memberof GuideModuleSteps
     */
    contentType?: GuideModuleStepsContentTypeEnum;
    /**
     * 
     * @type {GuideModuleContent}
     * @memberof GuideModuleSteps
     */
    content?: GuideModuleContent;
    /**
     * Button text for guide step
     * @type {string}
     * @memberof GuideModuleSteps
     */
    buttonText?: string | null;
}

/**
* @export
* @enum {string}
*/
export enum GuideModuleStepsContentTypeEnum {
    StaticPage = 'static_page',
    SimpleChoiceForm = 'simple_choice_form',
    MultipleChoiceForm = 'multiple_choice_form',
    Custom = 'custom'
}

export function GuideModuleStepsFromJSON(json: any): GuideModuleSteps {
    return GuideModuleStepsFromJSONTyped(json, false);
}

export function GuideModuleStepsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuideModuleSteps {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sortIndex': json['sort_index'],
        'contentType': !exists(json, 'content_type') ? undefined : json['content_type'],
        'content': !exists(json, 'content') ? undefined : GuideModuleContentFromJSON(json['content']),
        'buttonText': !exists(json, 'button_text') ? undefined : json['button_text'],
    };
}

export function GuideModuleStepsToJSON(value?: GuideModuleSteps | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sort_index': value.sortIndex,
        'content_type': value.contentType,
        'content': GuideModuleContentToJSON(value.content),
        'button_text': value.buttonText,
    };
}

