/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GuideModuleContentItems,
    GuideModuleContentItemsFromJSON,
    GuideModuleContentItemsFromJSONTyped,
    GuideModuleContentItemsToJSON,
    GuideModuleContentOptions,
    GuideModuleContentOptionsFromJSON,
    GuideModuleContentOptionsFromJSONTyped,
    GuideModuleContentOptionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface GuideModuleContent
 */
export interface GuideModuleContent {
    /**
     * 
     * @type {number}
     * @memberof GuideModuleContent
     */
    readonly id?: number;
    /**
     * Form title for guide simple form
     * @type {string}
     * @memberof GuideModuleContent
     */
    title?: string;
    /**
     * Page text for guide static page
     * @type {string}
     * @memberof GuideModuleContent
     */
    text?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GuideModuleContent
     */
    readonly textRendered?: string;
    /**
     * 
     * @type {Blob}
     * @memberof GuideModuleContent
     */
    image?: Blob | null;
    /**
     * 
     * @type {Array<GuideModuleContentOptions>}
     * @memberof GuideModuleContent
     */
    options?: Array<GuideModuleContentOptions>;
    /**
     * 
     * @type {Array<GuideModuleContentItems>}
     * @memberof GuideModuleContent
     */
    items?: Array<GuideModuleContentItems>;
    /**
     * The code name for the user content.
     * @type {string}
     * @memberof GuideModuleContent
     */
    name?: string;
}

export function GuideModuleContentFromJSON(json: any): GuideModuleContent {
    return GuideModuleContentFromJSONTyped(json, false);
}

export function GuideModuleContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuideModuleContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'textRendered': !exists(json, 'text_rendered') ? undefined : json['text_rendered'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(GuideModuleContentOptionsFromJSON)),
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(GuideModuleContentItemsFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function GuideModuleContentToJSON(value?: GuideModuleContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'text': value.text,
        'image': value.image,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(GuideModuleContentOptionsToJSON)),
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(GuideModuleContentItemsToJSON)),
        'name': value.name,
    };
}

