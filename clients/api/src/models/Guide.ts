/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Guide
 */
export interface Guide {
    /**
     * 
     * @type {number}
     * @memberof Guide
     */
    readonly id?: number;
    /**
     * Appears as the title for this guide
     * @type {string}
     * @memberof Guide
     */
    title?: string;
    /**
     * Used by the clients to lookup specific guides.
     * @type {string}
     * @memberof Guide
     */
    slug: string;
    /**
     * Time to read the guide.
     * @type {string}
     * @memberof Guide
     */
    readingTime: string;
    /**
     * 
     * @type {Blob}
     * @memberof Guide
     */
    image?: Blob | null;
    /**
     * 
     * @type {string}
     * @memberof Guide
     */
    readonly read?: string;
    /**
     * 
     * @type {number}
     * @memberof Guide
     */
    sortIndex: number;
}

export function GuideFromJSON(json: any): Guide {
    return GuideFromJSONTyped(json, false);
}

export function GuideFromJSONTyped(json: any, ignoreDiscriminator: boolean): Guide {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'slug': json['slug'],
        'readingTime': json['reading_time'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'read': !exists(json, 'read') ? undefined : json['read'],
        'sortIndex': json['sort_index'],
    };
}

export function GuideToJSON(value?: Guide | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'slug': value.slug,
        'reading_time': value.readingTime,
        'image': value.image,
        'sort_index': value.sortIndex,
    };
}

